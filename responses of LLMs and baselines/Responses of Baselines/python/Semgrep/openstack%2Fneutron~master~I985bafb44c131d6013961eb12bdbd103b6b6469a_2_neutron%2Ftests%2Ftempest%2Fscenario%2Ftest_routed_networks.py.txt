                   
                   
┌─────────────────┐
│ 2 Code Findings │
└─────────────────┘
                                                                                                                        
    ../res_files/Neutron/openstack%2Fneutron~master~I985bafb44c131d6013961eb12bdbd103b6b6469a_2_neutron%2Ftests%2Ftempes
  t%2Fscenario%2Ftest_routed_networks.py/test_routed_networks_new-021ac7c4ab1c2af41dcb78da754b7faa.py                   
   ❯❯❱ python.lang.security.audit.subprocess-shell-true.subprocess-shell-true
          Found 'subprocess' function 'call' with 'shell=True'. This is dangerous because this call will spawn
          the command using a shell process. Doing so propagates current shell settings and variables, which  
          makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.          
          Details: https://sg.run/J92w                                                                        
                                                                                                              
           ▶▶┆ Autofix ▶ subprocess.call(all_cmd, shell=False,stdout=subprocess.PIPE,stderr=subprocess.STDOUT)
          127┆ ret = subprocess.call(all_cmd, shell=True,
          128┆                       stdout=subprocess.PIPE,
          129┆                       stderr=subprocess.STDOUT)
            ⋮┆----------------------------------------
           ▶▶┆ Autofix ▶ subprocess.call('rm -f %s' % key_file_path, shell=False,stdout=subprocess.PIPE)
          134┆ subprocess.call('rm -f %s' % key_file_path, shell=True,
          135┆                 stdout=subprocess.PIPE)

