```python
# Supplementary code file based on the provided commit message and code snippet

import time

class CellDatabases(fixtures.Fixture):
    # Existing methods and initializations ...

    def _wrap_target_cell(self, context, cell_mapping):
        """Handle race condition when setting the last DB context manager."""
        if cell_mapping:
            desired = self._ctxt_mgrs[cell_mapping.database_connection]
        else:
            desired = self._default_ctxt_mgr

        with self._cell_lock.read_lock():
            if self._last_ctxt_mgr == desired:
                with self._real_target_cell(context, cell_mapping) as c:
                    yield c
                    return

        raised_exc = None
        max_retries = 3  # Maximum number of retries
        retry_count = 0

        while retry_count < max_retries:
            try:
                with self._cell_lock.write_lock():
                    # Set last context manager to the desired cell's context manager.
                    self._last_ctxt_mgr = desired
                    with self._cell_lock.read_lock():
                        if self._last_ctxt_mgr == desired:
                            with self._real_target_cell(context, cell_mapping) as ccontext:
                                yield ccontext
                            return
                        else:
                            raise RuntimeError('Global DB state changed underneath us')
            except RuntimeError:
                retry_count += 1
                time.sleep(0.1)  # Sleep for 100ms before retrying
                continue

            if raised_exc:
                raise raised_exc
            else:
                raise RuntimeError('Failed to set DB context manager after retries')

        with self._cell_lock.write_lock():
            # Restore the default context manager after the operation
            self._last_ctxt_mgr = self._default_ctxt_mgr

        if raised_exc:
            raise raised_exc
```

This supplementary code file modifies the `_wrap_target_cell` method of the `CellDatabases` class to include a retry mechanism. The retry logic is implemented to handle the race condition as described in the commit message. If the race is detected, indicated by a `RuntimeError`, the setting of the last DB context manager is retried up to a maximum of three times with a short delay between each retry. If the retries exceed the maximum limit, a `RuntimeError` is raised to indicate the failure to set the DB context manager.