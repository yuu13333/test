 No security defects are detected in the code.

However, I do have some suggestions for improvement:

1. Consistent coding style:
The code uses both camelCase and snake_case for variable names. It's better to stick to a single convention throughout the code.
2. Type hints and annotations:
The code uses type hints and annotations inconsistently. It's a good practice to add type hints and annotations for all variables and function parameters to make the code more readable and maintainable.
3. Function naming:
Some function names are quite long and descriptive, while others are short and unclear. It's better to use descriptive names for all functions to make the code easier to understand.
4. Docstrings:
The code lacks docstrings for some functions, which makes it difficult to understand their purpose and usage. It's a good practice to add docstrings for all functions to provide context and documentation.
5. Error handling:
The code catches and handles some exceptions, but it doesn't handle all possible exceptions. It's a good practice to handle all possible exceptions and provide informative error messages.
6. Consistent spacing and indentation:
The code has inconsistent spacing and indentation in some places. It's better to use consistent spacing and indentation throughout the code to make it easier to read and understand.

Overall, the code seems to be well-structured and easy to follow. However, following coding standards and best practices can make it even better.