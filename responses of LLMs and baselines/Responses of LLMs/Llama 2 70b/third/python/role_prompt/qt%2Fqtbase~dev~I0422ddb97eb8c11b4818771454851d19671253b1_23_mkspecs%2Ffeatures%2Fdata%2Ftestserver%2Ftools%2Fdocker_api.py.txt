 No security defects are detected in the code.

However, I do have some suggestions for improvement:

1. Consistency:
Inconsistent naming conventions are used throughout the code. For example, some variable names are camelCase, while others are separate words. It's better to stick to a single convention throughout the code for readability and maintainability.
2. Comments:
Some of the comments are not very clear or descriptive. For example, the comment for the `docker_build` function merely states "build up server images," which doesn't provide much context or explanation. It's better to include more detailed comments that describe the purpose and parameters of each function.
3. Function signature:
Some functions lack a clear signature, making it difficult to understand their purpose and parameters. For example, the `docker_exec` function takes a list of servers as input but doesn't clearly define what the function does or what the output is. It's better to include a clear signature and documentation for each function.
4. Error handling:
The error handling in the code could be improved. For example, in the `docker_build` function, the code exit(-1) # terminate if docker build fail" is not very descriptive and doesn't provide enough information to diagnose the problem. It's better to include more specific error messages and handling mechanisms to help users troubleshoot issues.
5. Security:
While there are no obvious security defects in the code, it's worth noting that the code uses Docker's API, which could potentially be vulnerable to attacks. Therefore, it's essential to keep the Docker version up-to-date and use secure practices when interacting with the Docker API.

Overall, the code appears to be well-structured, and the functionality seems to be well-implemented. However, some improvements in consistency, comments, function signature, error handling, and security practices could make the code more maintainable and user-friendly.