 No security defects are detected in the code.

However, I do have some suggestions for improving the code's readability and maintainability:

1. Consistent naming conventions:
The code uses both camelCase and snake_case naming conventions. It's better to stick to a single convention throughout the code. For example, you can use camelCase for class names and snake_case for variable names.
2. Type hints and annotations:
The code can benefit from adding type hints and annotations for function parameters, return types, and variable declarations. This will make the code easier to understand and help catch type-related errors at runtime.
3. Docstrings:
Adding docstrings to functions and classes can help provide context and explain the purpose of the code. This will make the code easier to understand for other developers who may need to work with it in the future.
4. Code organization:
The code is organized into multiple classes and functions, but some of the functions are quite long. Consider breaking down the longer functions into smaller functions each with a single responsibility, this will make the code easier to read and maintain.
5. Comments:
Adding comments to the code can help explain the purpose of the code and make it easier to understand. Consider adding comments to the classes, functions, and variables to provide context and explain their purpose.
6. Consistent indentation:
The indentation in the code is not consistent, some lines are indented with 4 spaces, and others with 8. It's better to stick to a single indentation size throughout the code.
7. Trailing commas:
Some of the lines have trailing commas, it's better to remove them, as they are not necessary and can make the code harder to read.
8. Unused imports:
The code has some unused imports, it's better to remove them, as they are not necessary and can make the code harder to read.
9. Unused variables:
The code has some unused variables, it's better to remove them, as they are not necessary and can make the code harder to read.
10. Consistent spacing:
The code has some inconsistent spacing, some lines have multiple spaces between them, and others have only one. It's better to stick to a single spacing size throughout the code.

Overall, the code seems to be well-structured, and the above suggestions are minor improvements that can make the code more readable and maintainable.