 No security defects are detected in the code.

However, I would like to mention a few best practices that could be applied to the code:

1. Consistent naming conventions: The code uses both camelCase and snake_case naming conventions. It's better to stick to a single convention throughout the code.
2. Type hints: The code uses type hints for some function parameters, but not for all. It's a good practice to add type hints for all function parameters to make the code more readable and maintainable.
3. Docstrings: The code has docstrings for some functions, but not for all. It's a good practice to add docstrings for all functions to provide a clear understanding of what the function does and what its parameters are.
4. Function signature: Some functions have a large number of parameters. It's a good practice to break down such functions into smaller functions each with a single responsibility, making the code easier to read and maintain.
5. Error handling: The code has a few places where an exception is caught and handled, but it's not clear what the appropriate error message is. It's a good practice to include specific error messages for each exception and to handle errors as close to the source as possible.
6. Consistent indentation: The code has inconsistent indentation in some places. It's a good practice to use consistent indentation throughout the code to make it easier to read.
7. Unused variables: The code has a few unused variables, such as `CONF.validation.image_ssh_user`. It's a good practice to remove unused variables to avoid confusion and reduce code maintenance.
8. Code organization: The code has a mix of test code and utility functions. It's a good practice to separate test code and utility functions into different modules or classes to make the code easier to navigate and maintain.