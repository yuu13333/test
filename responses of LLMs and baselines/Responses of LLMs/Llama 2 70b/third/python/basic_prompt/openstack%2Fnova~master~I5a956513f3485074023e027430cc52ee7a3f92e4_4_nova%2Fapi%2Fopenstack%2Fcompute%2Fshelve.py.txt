 No security defects are detected in the code.

However, I would like to mention a few best practices that could be applied to improve the code quality and security:

1. Consistency in naming conventions:
The code uses both camelCase and snake_case naming conventions. It's better to stick to a single convention throughout the code for better readability and maintainability.
2. Type hints and annotations:
The function parameters and return types are not annotated with type hints. Adding type hints can make the code more readable and easier to understand, and can also help catch type-related errors at runtime.
3. Docstrings:
The code does not include docstrings for the functions, which makes it difficult to understand the purpose and parameters of each function without reading through the implementation. Adding docstrings can improve the code's readability and help developers understand how to use the functions.
4. Error handling:
The code uses a mix of try-except blocks and raise statements to handle errors. It's better to use a consistent error handling approach throughout the code. For example, instead of raising bare exceptions, it's better to catch specific exceptions and handle them appropriately.
5. Consistency in indentation and spacing:
The code has inconsistent indentation and spacing, which can make it difficult to read and understand. It's better to use consistent indentation and spacing throughout the code.
6. Comments:
The code does not include comments that explain the purpose and implementation of each function. Adding comments can improve the code's readability and help developers understand how the functions work.
7. Security-related improvements:
The code does not include any security-related best practices, such as input validation, output encoding, or secure password handling. It's important to consider security aspects when writing code to prevent potential vulnerabilities.

Overall, the code seems to be well-structured and easy to understand, but following best practices can help improve its quality and security.