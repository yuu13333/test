 No security defects are detected in the code.

However, I do have some observations and suggestions for improvement:

1. Consistency in naming conventions:
Inconsistent naming conventions are used throughout the code. For example, some variable names use camelCase, while others use underscores. It is recommended to follow a consistent naming convention throughout the code for better readability and maintainability.
2. Type hints and annotations:
The code uses type hints and annotations sparingly. Adding type hints and annotations for function parameters, return types, and variable declarations can improve code readability and help catch type-related errors at runtime.
3. Docstrings:
The code lacks docstrings for most functions, which makes it difficult to understand the purpose and parameters of each function without reading through the entire code. Adding docstrings for each function can improve code readability and provide a quick reference for developers who need to understand the code.
4. Function signature:
Some functions, such as `test_handle_expired_object`, have a complex signature with multiple arguments. It may be beneficial to break down such functions into smaller functions with fewer arguments, making the code easier to read and maintain.
5. Code organization:
The code is organized into multiple classes and functions, but some functions seem to be redundant or have similar functionality. It may be beneficial to review the code organization and consolidate similar functions or classes to improve code readability and maintainability.
6. Error handling:
The code does not handle errors consistently. Some functions catch specific exceptions, while others raise generic exceptions. It is recommended to handle errors consistently throughout the code and provide inform