 No security defects are detected in the code.

However, I would like to point out a few things that could be improved:

1. Consistency in naming conventions:
The code uses both camelCase and snake_case naming conventions. It's better to stick to a single convention throughout the code.
2. Type hints and annotations:
The function parameters and return types are not annotated. Adding type hints and annotations would make the code more readable and maintainable.
3. Docstrings:
The docstrings are missing for some functions, which makes it difficult to understand their purpose and usage. It's a good practice to include docstrings for all functions, even if they are trivial.
4. Error handling:
The code catches general exceptions and re-raises them with a HTTPConflict status code. However, it's better to catch specific exceptions and handle them appropriately, rather than catching all exceptions.
5. Code organization:
The code is quite long and complex, and it's difficult to understand the flow of the code. It would be better to break the code into smaller functions, each with a single responsibility, and with clear and descriptive names. This would make the code more readable and maintainable.
6. Comments:
The code has some comments, but they are not very descriptive. It's better to add clear and descriptive comments to explain the purpose and usage of the code, especially for complex parts of the code.
7. Testing:
The code does not have any tests, which makes it difficult to ensure that the code works correctly. It's a good practice to write tests for the code to ensure its correctness and robustness.

Overall, the code seems to be well-structured, but there are some areas where it could be improved for better readability, maintainability, and security.