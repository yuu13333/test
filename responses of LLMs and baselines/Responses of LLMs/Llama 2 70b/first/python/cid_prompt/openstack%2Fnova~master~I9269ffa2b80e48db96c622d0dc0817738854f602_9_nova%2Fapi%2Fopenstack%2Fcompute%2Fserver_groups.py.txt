 No security defects are detected in the code.

However, I do have some suggestions for improvement:

1. Consistent naming conventions:
The code uses both camelCase and snake_case naming conventions. It's better to stick to a single convention throughout the code.
2. Type hints and annotations:
The code uses type hints and annotations inconsistently. It's better to use them consistently throughout the code to make it easier to understand and maintain.
3. Docstrings:
The code lacks docstrings for some functions and classes. Docstrings should be added to provide a brief description of the function or class and its purpose.
4. Function signature:
The function signature for _format_server_group() is inconsistent. The function takes three arguments, but only two are used. It's better to remove the unused argument or update the function signature to reflect its actual usage.
5. Code organization:
The code is organized into separate functions for each API action. However, some functions are quite long and complex. It may be better to break down these functions into smaller, more manageable functions to improve readability and maintainability.
6. Error handling:
The code uses try-except blocks to handle errors. However, it's better to use specific exception types instead of catching the general Exception type. This makes the code more robust and easier to debug.
7. Consistent indentation:
The code uses inconsistent indentation. It's better to use consistent indentation throughout the code to make it easier to read and understand.
8. Unused imports:
The code has unused imports that can be removed. It's better to remove unused imports to reduce clutter and improve code readability.
9. Code style:
The code uses inconsistent naming conventions for variables and functions. It's better to follow a consistent naming convention throughout the code.
10. Testing:
The code lacks tests for some functions. It's better to add tests for all functions to ensure that the code works as expected and to improve code quality.