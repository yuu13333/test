 No security defects are detected in the code.

However, I do have some suggestions for improvement:

1. Consistency:
Inconsistent naming conventions are used throughout the code. For example, some variable names use camelCase, while others use separate words with underscores. It's better to stick to a single convention throughout the code for readability and maintainability.
2. Type Hints:
Type hints are missing for some function parameters and return types. Adding type hints can improve code readability and help catch type-related errors at runtime.
3. Docstrings:
 Docstrings are missing for some functions, which makes it difficult to understand their purpose and usage. Adding docstrings can improve code readability and provide context for other developers who may need to understand the code.
4. Error Handling:
The code uses bare except blocks in some places, which can mask important error information and make it difficult to diagnose issues. Instead, it's better to catch specific exceptions and handle them appropriately, or at least log the error and stack trace.
5. Security:
Although there are no security defects in the code, it's worth mentioning that the code doesn't perform any authentication or authorization checks. It relies on the surrounding framework to handle authentication and authorization, but it's important to ensure that the code is properly secured and that access control is in place.
6. Code Organization:
The code is organized into separate functions, which is good. However, some functions are quite long and complex, which can make them difficult to understand and maintain. Consider breaking down long functions into smaller, more focused functions to improve code readability and maintainability.
7. Testing:
The code doesn't include any tests, which makes it difficult to ensure that it works correctly and is free of defects. Consider adding tests to the code to ensure that it behaves as expected and to catch any issues before they become problems in production.