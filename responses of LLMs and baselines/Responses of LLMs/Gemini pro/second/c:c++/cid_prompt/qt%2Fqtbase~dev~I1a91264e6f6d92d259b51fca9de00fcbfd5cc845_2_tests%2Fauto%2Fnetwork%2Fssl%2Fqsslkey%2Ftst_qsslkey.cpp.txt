**Line 322 | CWE-284 (CWE-284 Improper Access Control)**

The `toEncryptedPemOrDer()` function does not properly verify the password before decrypting a private key. This could allow an attacker to decrypt a private key with a weak or guessed password.

Solution:
```cpp
if (type == QSsl::PrivateKey) {
    QByteArray decryptedPem = key.toPem(pwBytes);
    QVERIFY(!decryptedPem.isEmpty());
    QSslKey keyPem(decryptedPem, algorithm, QSsl::Pem, type);
    QVERIFY(!keyPem.isNull());
    QCOMPARE(keyPem, key);
    QCOMPARE(keyPem.toPem(), key.toPem());
}
```

**Line 377 | CWE-284 (CWE-284 Improper Access Control)**

The `toEncryptedPemOrDer()` function does not properly verify the password before decrypting a private key. This could allow an attacker to decrypt a private key with a weak or guessed password.

Solution:
```cpp
QFile keyFile(fileName);
QVERIFY(keyFile.exists());
{
    if (!keyFile.isOpen())
        keyFile.open(QIODevice::ReadOnly);
    else
        keyFile.reset();
    QSslKey key(&keyFile, QSsl::Rsa, QSsl::Pem, QSsl::PrivateKey, password);
    QVERIFY(!key.isNull()); // correct passphrase
}
```