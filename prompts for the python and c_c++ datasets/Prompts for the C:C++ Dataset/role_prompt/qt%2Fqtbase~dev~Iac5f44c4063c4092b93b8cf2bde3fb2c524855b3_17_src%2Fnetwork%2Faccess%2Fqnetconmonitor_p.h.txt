I want you to act as a code reviewer of Qt Base in Qt. Please review the code below to detect security defects. If any are found, please describe the security defect in detail and indicate the corresponding line number of code and solution. If none are found, please state '''No security defects are detected in the code'''.

1 /****************************************************************************
2 **
3 ** Copyright (C) 2019 The Qt Company Ltd.
4 ** Contact: https://www.qt.io/licensing/
5 **
6 ** This file is part of the QtNetwork module of the Qt Toolkit.
7 **
8 ** $QT_BEGIN_LICENSE:LGPL$
9 ** Commercial License Usage
10 ** Licensees holding valid commercial Qt licenses may use this file in
11 ** accordance with the commercial license agreement provided with the
12 ** Software or, alternatively, in accordance with the terms contained in
13 ** a written agreement between you and The Qt Company. For licensing terms
14 ** and conditions see https://www.qt.io/terms-conditions. For further
15 ** information use the contact form at https://www.qt.io/contact-us.
16 **
17 ** GNU Lesser General Public License Usage
18 ** Alternatively, this file may be used under the terms of the GNU Lesser
19 ** General Public License version 3 as published by the Free Software
20 ** Foundation and appearing in the file LICENSE.LGPL3 included in the
21 ** packaging of this file. Please review the following information to
22 ** ensure the GNU Lesser General Public License version 3 requirements
23 ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html.
24 **
25 ** GNU General Public License Usage
26 ** Alternatively, this file may be used under the terms of the GNU
27 ** General Public License version 2.0 or (at your option) the GNU General
28 ** Public license version 3 or any later version approved by the KDE Free
29 ** Qt Foundation. The licenses are as published by the Free Software
30 ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3
31 ** included in the packaging of this file. Please review the following
32 ** information to ensure the GNU General Public License requirements will
33 ** be met: https://www.gnu.org/licenses/gpl-2.0.html and
34 ** https://www.gnu.org/licenses/gpl-3.0.html.
35 **
36 ** $QT_END_LICENSE$
37 **
38 ****************************************************************************/
39 
40 #ifndef QNETCONMONITOR_P_H
41 #define QNETCONMONITOR_P_H
42 
43 #include <private/qtnetworkglobal_p.h>
44 
45 #include <QtCore/qloggingcategory.h>
46 #include <QtNetwork/qhostaddress.h>
47 #include <QtCore/qglobal.h>
48 #include <QtCore/qobject.h>
49 
50 //
51 //  W A R N I N G
52 //  -------------
53 //
54 // This file is not part of the Qt API.  It exists purely as an
55 // implementation detail.  This header file may change from version to
56 // version without notice, or even be removed.
57 //
58 // We mean it.
59 //
60 
61 QT_BEGIN_NAMESPACE
62 
63 class QNetworkConnectionMonitorPrivate;
64 class QNetworkConnectionMonitor : public QObject
65 {
66     Q_OBJECT
67 
68 public:
69     QNetworkConnectionMonitor();
70     ~QNetworkConnectionMonitor();
71 
72     bool startMonitoring(const QHostAddress &localAddress,
73                          const QHostAddress &remoteAddress = {});
74     bool isMonitoring() const;
75     void stopMonitoring();
76 
77     bool isReachable() const;
78 
79 Q_SIGNALS:
80     // Important: connect to this using QueuedConnection. On Darwin
81     // callback is coming on a special dispatch queue.
82     void reachabilityChanged(bool isOnline);
83 
84 private:
85     void timerEvent(QTimerEvent *timerEvent) override;
86 
87     Q_DECLARE_PRIVATE(QNetworkConnectionMonitor)
88     Q_DISABLE_COPY_MOVE(QNetworkConnectionMonitor)
89 };
90 
91 class QNetworkStatusMonitorPrivate;
92 class QNetworkStatusMonitor : public QObject
93 {
94     Q_OBJECT
95 
96 public:
97     QNetworkStatusMonitor();
98     ~QNetworkStatusMonitor();
99 
100     bool start();
101     bool isMonitoring() const;
102     bool isNetworkAccesible() const;
103 
104     static bool isEnabled();
105 
106 Q_SIGNALS:
107     // Unlike QNetworkConnectionMonitor, this can be connected to
108     // directly.
109     void onlineStateChanged(bool isOnline);
110 
111 private slots:
112     void reachabilityChanged(bool isOnline);
113 
114 private:
115     Q_DECLARE_PRIVATE(QNetworkStatusMonitor)
116     Q_DISABLE_COPY_MOVE(QNetworkStatusMonitor)
117 };
118 
119 Q_DECLARE_LOGGING_CATEGORY(lcNetMon)
120 
121 QT_END_NAMESPACE
122 
123 #endif // QNETCONMONITOR_P_H
