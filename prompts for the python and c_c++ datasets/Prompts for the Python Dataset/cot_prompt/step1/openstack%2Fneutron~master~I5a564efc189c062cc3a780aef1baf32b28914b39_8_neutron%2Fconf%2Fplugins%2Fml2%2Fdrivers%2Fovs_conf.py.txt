Based on the given code from a commit, please generate supplementary code files according to the commit message.
####commit message
Use HostAddressOpt for opts that accept IP and hostnames

Some configuration options were accepting both IP addresses
and hostnames. Since there was no specific OSLO opt type to
support this, we were using ``StrOpt``. The change [1] that
added support for ``HostAddressOpt`` type was merged in Ocata
and became available for use with oslo version 3.22.

This patch changes the opt type of configuration options to use
this more relevant opt type - HostAddressOpt.

[1] I77bdb64b7e6e56ce761d76696bc4448a9bd325eb

TrivialFix

Change-Id: I5a564efc189c062cc3a780aef1baf32b28914b39

####code 
1 # Copyright 2012 Red Hat, Inc.
2 #
3 #    Licensed under the Apache License, Version 2.0 (the "License"); you may
4 #    not use this file except in compliance with the License. You may obtain
5 #    a copy of the License at
6 #
7 #         http://www.apache.org/licenses/LICENSE-2.0
8 #
9 #    Unless required by applicable law or agreed to in writing, software
10 #    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
11 #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
12 #    License for the specific language governing permissions and limitations
13 #    under the License.
14 
15 from neutron_lib import constants as n_const
16 from oslo_config import cfg
17 
18 from neutron._i18n import _
19 from neutron.plugins.common import constants as p_const
20 from neutron.plugins.ml2.drivers.openvswitch.agent.common \
21     import constants
22 
23 
24 DEFAULT_BRIDGE_MAPPINGS = []
25 DEFAULT_TUNNEL_TYPES = []
26 
27 ovs_opts = [
28     cfg.StrOpt('integration_bridge', default='br-int',
29                help=_("Integration bridge to use. "
30                       "Do not change this parameter unless you have a good "
31                       "reason to. This is the name of the OVS integration "
32                       "bridge. There is one per hypervisor. The integration "
33                       "bridge acts as a virtual 'patch bay'. All VM VIFs are "
34                       "attached to this bridge and then 'patched' according "
35                       "to their network connectivity.")),
36     cfg.StrOpt('tunnel_bridge', default='br-tun',
37                help=_("Tunnel bridge to use.")),
38     cfg.StrOpt('int_peer_patch_port', default='patch-tun',
39                help=_("Peer patch port in integration bridge for tunnel "
40                       "bridge.")),
41     cfg.StrOpt('tun_peer_patch_port', default='patch-int',
42                help=_("Peer patch port in tunnel bridge for integration "
43                       "bridge.")),
44     cfg.HostAddressOpt('local_ip',
45                        help=_("IP address of local overlay (tunnel) network "
46                               "endpoint. Use either an IPv4 or IPv6 address "
47                               "that resides on one of the host network "
48                               "interfaces. The IP version of this value must "
49                               "match the value of the 'overlay_ip_version' "
50                               "option in the ML2 plug-in configuration file "
51                               "on the neutron server node(s).")),
52     cfg.ListOpt('bridge_mappings',
53                 default=DEFAULT_BRIDGE_MAPPINGS,
54                 help=_("Comma-separated list of <physical_network>:<bridge> "
55                        "tuples mapping physical network names to the agent's "
56                        "node-specific Open vSwitch bridge names to be used "
57                        "for flat and VLAN networks. The length of bridge "
58                        "names should be no more than 11. Each bridge must "
59                        "exist, and should have a physical network interface "
60                        "configured as a port. All physical networks "
61                        "configured on the server should have mappings to "
62                        "appropriate bridges on each agent. "
63                        "Note: If you remove a bridge from this "
64                        "mapping, make sure to disconnect it from the "
65                        "integration bridge as it won't be managed by the "
66                        "agent anymore.")),
67     cfg.BoolOpt('use_veth_interconnection', default=False,
68                 help=_("Use veths instead of patch ports to interconnect the "
69                        "integration bridge to physical networks. "
70                        "Support kernel without Open vSwitch patch port "
71                        "support so long as it is set to True.")),
72     cfg.StrOpt('of_interface', default='native',
73                deprecated_for_removal=True,
74                choices=['ovs-ofctl', 'native'],
75                help=_("OpenFlow interface to use.")),
76     cfg.StrOpt('datapath_type', default=constants.OVS_DATAPATH_SYSTEM,
77                choices=[constants.OVS_DATAPATH_SYSTEM,
78                         constants.OVS_DATAPATH_NETDEV],
79                help=_("OVS datapath to use. 'system' is the default value and "
80                       "corresponds to the kernel datapath. To enable the "
81                       "userspace datapath set this value to 'netdev'.")),
82     cfg.StrOpt('vhostuser_socket_dir', default=constants.VHOST_USER_SOCKET_DIR,
83                help=_("OVS vhost-user socket directory.")),
84     cfg.HostAddressOpt('of_listen_address', default='127.0.0.1',
85                        help=_("Address to listen on for OpenFlow connections. "
86                               "Used only for 'native' driver.")),
87     cfg.PortOpt('of_listen_port', default=6633,
88                 help=_("Port to listen on for OpenFlow connections. "
89                        "Used only for 'native' driver.")),
90     cfg.IntOpt('of_connect_timeout', default=30,
91                help=_("Timeout in seconds to wait for "
92                       "the local switch connecting the controller. "
93                       "Used only for 'native' driver.")),
94     cfg.IntOpt('of_request_timeout', default=10,
95                help=_("Timeout in seconds to wait for a single "
96                       "OpenFlow request. "
97                       "Used only for 'native' driver.")),
98 ]
99 
100 agent_opts = [
101     cfg.IntOpt('polling_interval', default=2,
102                help=_("The number of seconds the agent will wait between "
103                       "polling for local device changes.")),
104     cfg.BoolOpt('minimize_polling',
105                 default=True,
106                 help=_("Minimize polling by monitoring ovsdb for interface "
107                        "changes.")),
108     cfg.IntOpt('ovsdb_monitor_respawn_interval',
109                default=constants.DEFAULT_OVSDBMON_RESPAWN,
110                help=_("The number of seconds to wait before respawning the "
111                       "ovsdb monitor after losing communication with it.")),
112     cfg.ListOpt('tunnel_types', default=DEFAULT_TUNNEL_TYPES,
113                 help=_("Network types supported by the agent "
114                        "(gre and/or vxlan).")),
115     cfg.PortOpt('vxlan_udp_port', default=p_const.VXLAN_UDP_PORT,
116                 help=_("The UDP port to use for VXLAN tunnels.")),
117     cfg.IntOpt('veth_mtu', default=9000,
118                help=_("MTU size of veth interfaces")),
119     cfg.BoolOpt('l2_population', default=False,
120                 help=_("Use ML2 l2population mechanism driver to learn "
121                        "remote MAC and IPs and improve tunnel scalability.")),
122     cfg.BoolOpt('arp_responder', default=False,
123                 help=_("Enable local ARP responder if it is supported. "
124                        "Requires OVS 2.1 and ML2 l2population driver. "
125                        "Allows the switch (when supporting an overlay) "
126                        "to respond to an ARP request locally without "
127                        "performing a costly ARP broadcast into the overlay.")),
128     cfg.BoolOpt('prevent_arp_spoofing', default=True,
129                 deprecated_for_removal=True,
130                 help=_("Enable suppression of ARP responses that don't match "
131                        "an IP address that belongs to the port from which "
132                        "they originate. Note: This prevents the VMs attached "
133                        "to this agent from spoofing, it doesn't protect them "
134                        "from other devices which have the capability to spoof "
135                        "(e.g. bare metal or VMs attached to agents without "
136                        "this flag set to True). Spoofing rules will not be "
137                        "added to any ports that have port security disabled. "
138                        "For LinuxBridge, this requires ebtables. For OVS, it "
139                        "requires a version that supports matching ARP "
140                        "headers. This option will be removed in Ocata so "
141                        "the only way to disable protection will be via the "
142                        "port security extension.")),
143     cfg.BoolOpt('dont_fragment', default=True,
144                 help=_("Set or un-set the don't fragment (DF) bit on "
145                        "outgoing IP packet carrying GRE/VXLAN tunnel.")),
146     cfg.BoolOpt('enable_distributed_routing', default=False,
147                 help=_("Make the l2 agent run in DVR mode.")),
148     cfg.IntOpt('quitting_rpc_timeout', default=10,
149                help=_("Set new timeout in seconds for new rpc calls after "
150                       "agent receives SIGTERM. If value is set to 0, rpc "
151                       "timeout won't be changed")),
152     cfg.BoolOpt('drop_flows_on_start', default=False,
153                 help=_("Reset flow table on start. Setting this to True will "
154                        "cause brief traffic interruption.")),
155     cfg.BoolOpt('tunnel_csum', default=False,
156                 help=_("Set or un-set the tunnel header checksum  on "
157                        "outgoing IP packet carrying GRE/VXLAN tunnel.")),
158     cfg.StrOpt('agent_type', default=n_const.AGENT_TYPE_OVS,
159                deprecated_for_removal=True,
160                help=_("Selects the Agent Type reported"))
161 ]
162 
163 
164 def register_ovs_agent_opts(cfg=cfg.CONF):
165     cfg.register_opts(ovs_opts, "OVS")
166     cfg.register_opts(agent_opts, "AGENT")
