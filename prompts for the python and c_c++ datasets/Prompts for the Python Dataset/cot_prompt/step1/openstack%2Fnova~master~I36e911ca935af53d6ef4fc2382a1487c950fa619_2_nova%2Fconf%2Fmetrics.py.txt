Based on the given code from a commit, please generate supplementary code files according to the commit message.
####commit message
Implement simple prometheus metrics for nova.

This is a toe in the water to expose metrics that I think
operational staff need to monitor nova well. There have been
previous attempts to expose some of this data via nova-api
calls, but it hasn't been great and some of the calls they
make are very expensive.

This isn't prometheus specific, its just the case that I care
about. I've tried reasonably hard to do this in a generic
manner which should work for other monitoring systems, but I'd
be interested in feedback.

Change-Id: I36e911ca935af53d6ef4fc2382a1487c950fa619

####code 
1 # Copyright 2019 Aptira Pty Ltd
2 # All Rights Reserved.
3 #
4 #    Licensed under the Apache License, Version 2.0 (the "License"); you may
5 #    not use this file except in compliance with the License. You may obtain
6 #    a copy of the License at
7 #
8 #         http://www.apache.org/licenses/LICENSE-2.0
9 #
10 #    Unless required by applicable law or agreed to in writing, software
11 #    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
12 #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
13 #    License for the specific language governing permissions and limitations
14 #    under the License.
15 
16 from oslo_config import cfg
17 
18 
19 metrics_group = cfg.OptGroup(
20     'metrics',
21     title='Metrics Options',
22     help="""
23 A collection of options specific to the publishing of operational metrics.
24 """)
25 
26 
27 metrics_opts = [
28     cfg.IntOpt('collection_interval',
29         default=60,
30         min=-1,
31         help="""
32 Number of seconds to wait between metrics collections.
33 
34 Possible values:
35 * 0: run at the default rate.
36 * -1: disable
37 * Any other value
38 """),
39     cfg.StrOpt('push_gateway',
40          default='localhost:9091',
41          help="""
42 The hostname and port of a prometheus pushgateway service to push metrics to.
43 
44 This should be in the form hostname:port as a string.
45 """),
46     ]
47 
48 
49 def register_opts(conf):
50     conf.register_group(metrics_group)
51     conf.register_opts(metrics_opts, group=metrics_group)
52 
53 
54 def list_opts():
55     return {'metrics': metrics_opts}
