Based on the given code from a commit, please generate supplementary code files according to the commit message.
####commit message
Adopts keystoneauth with glance client.

Migrate Glance client to Keystonesuth to make it
consistent with Cinder and Neutron clients.
This will help Glance client to use service token
functionality

Change-Id: I02be31bbe2de54c69210934b234ed380daca4fda

####code 
1 # All Rights Reserved.
2 #
3 #    Licensed under the Apache License, Version 2.0 (the "License"); you may
4 #    not use this file except in compliance with the License. You may obtain
5 #    a copy of the License at
6 #
7 #         http://www.apache.org/licenses/LICENSE-2.0
8 #
9 #    Unless required by applicable law or agreed to in writing, software
10 #    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
11 #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
12 #    License for the specific language governing permissions and limitations
13 #    under the License.
14 
15 from keystoneauth1 import loading as ks_loading
16 from oslo_config import cfg
17 
18 glance_group = cfg.OptGroup(
19     'glance',
20     title='Glance Options',
21     help='Configuration options for the Image service')
22 
23 glance_opts = [
24     # NOTE(sdague): there is intentionally no default here. This
25     # requires configuration. Eventually this will come from the
26     # service catalog, however we don't have a good path there atm.
27     # TODO(raj_singh): Add "required=True" flag to this option.
28     cfg.ListOpt('api_servers',
29         help="""
30 List of glance api servers endpoints available to nova.
31 
32 https is used for ssl-based glance api servers.
33 
34 Possible values:
35 
36 * A list of any fully qualified url of the form "scheme://hostname:port[/path]"
37   (i.e. "http://10.0.1.0:9292" or "https://my.glance.server/image").
38 """),
39     cfg.BoolOpt('api_insecure',
40         default=False,
41         help="""
42 Enable insecure SSL (https) requests to glance.
43 
44 This setting can be used to turn off verification of the glance server
45 certificate against the certificate authorities.
46 """),
47     cfg.IntOpt('num_retries',
48         default=0,
49         min=0,
50         help="""
51 Enable glance operation retries.
52 
53 Specifies the number of retries when uploading / downloading
54 an image to / from glance. 0 means no retries.
55 """),
56     cfg.ListOpt('allowed_direct_url_schemes',
57         default=[],
58         help="""
59 List of url schemes that can be directly accessed.
60 
61 This option specifies a list of url schemes that can be downloaded
62 directly via the direct_url. This direct_URL can be fetched from
63 Image metadata which can be used by nova to get the
64 image more efficiently. nova-compute could benefit from this by
65 invoking a copy when it has access to the same file system as glance.
66 
67 Possible values:
68 
69 * [file], Empty list (default)
70 """),
71     cfg.BoolOpt('verify_glance_signatures',
72         default=False,
73         help="""
74 Enable image signature verification.
75 
76 nova uses the image signature metadata from glance and verifies the signature
77 of a signed image while downloading that image. If the image signature cannot
78 be verified or if the image signature metadata is either incomplete or
79 unavailable, then nova will not boot the image and instead will place the
80 instance into an error state. This provides end users with stronger assurances
81 of the integrity of the image data they are using to create servers.
82 
83 Related options:
84 
85 * The options in the `key_manager` group, as the key_manager is used
86   for the signature validation.
87 """),
88     cfg.BoolOpt('debug',
89          default=False,
90          help='Enable or disable debug logging with glanceclient.')
91 ]
92 
93 
94 def register_opts(conf):
95     conf.register_group(glance_group)
96     conf.register_opts(glance_opts, group=glance_group)
97 
98     # TODO(johngarbutt) we need to add alias options in here
99     # api_insecure, cert_file, key_file and ca_file all need deprecating
100     # but need to check if anyone else is also using these ssl group options
101     deprecated = {
102         'insecure': [cfg.DeprecatedOpt('api_insecure',
103                         group=glance_group.name)],
104         'cafile': [cfg.DeprecatedOpt('ca_file',
105                         group="ssl")],
106         'certfile': [cfg.DeprecatedOpt('cert_file',
107                         group="ssl")],
108         'keyfile': [cfg.DeprecatedOpt('key_file',
109                         group="ssl")],
110     }
111     ks_loading.register_session_conf_options(conf, glance_group.name,
112                                              deprecated)
113 
114 
115 def list_opts():
116     return {
117         glance_group: (
118             glance_opts +
119             ks_loading.get_session_conf_options())
120     }
